# Custom Functions

# Create directory and cd into it
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Extract various archive formats
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)   tar xjf "$1"     ;;
            *.tar.gz)    tar xzf "$1"     ;;
            *.bz2)       bunzip2 "$1"     ;;
            *.rar)       unrar x "$1"     ;;
            *.gz)        gunzip "$1"      ;;
            *.tar)       tar xf "$1"      ;;
            *.tbz2)      tar xjf "$1"     ;;
            *.tgz)       tar xzf "$1"     ;;
            *.zip)       unzip "$1"       ;;
            *.Z)         uncompress "$1"  ;;
            *.7z)        7z x "$1"        ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Find process by name
psgrep() {
    ps aux | grep -v grep | grep "$1"
}

# Quick search in files
search() {
    if command -v rg > /dev/null; then
        rg "$1"
    else
        grep -r "$1" .
    fi
}

# Git helper functions
glog() {
    git log --oneline --graph --decorate --all "${@:-10}"
}

gacp() {
    git add .
    git commit -m "$1"
    git push
}

# System update function
sysupdate() {
    echo "Updating system packages..."
    sudo apt update && sudo apt upgrade -y
    
    if command -v brew > /dev/null; then
        echo "Updating Homebrew packages..."
        brew update && brew upgrade
    fi
    
    echo "System update completed!"
}

# File/directory size
sizeof() {
    du -sh "$1"
}

# Weather function (requires curl)
weather() {
    local city="${1:-Tokyo}"
    curl -s "http://wttr.in/$city?format=3"
}